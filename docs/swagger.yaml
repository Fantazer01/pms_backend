definitions:
  model.InsertProject:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  model.Message:
    properties:
      message:
        type: string
    type: object
  model.Project:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  model.ProjectShort:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  model.ProjectsPaged:
    properties:
      items:
        items:
          $ref: '#/definitions/model.ProjectShort'
        type: array
      page_index:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  model.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  model.Tasks:
    properties:
      items:
        items:
          $ref: '#/definitions/model.Task'
        type: array
    type: object
  model.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  model.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  model.UserInserted:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      username:
        type: string
    type: object
  model.UserShort:
    properties:
      full_name:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  model.UsersPaged:
    properties:
      items:
        items:
          $ref: '#/definitions/model.UserShort'
        type: array
      page_index:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
      summary: Login
      tags:
      - Auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logout
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Logout
      tags:
      - Auth
  /projects:
    get:
      consumes:
      - application/json
      description: Get projects
      parameters:
      - description: Page index of projects
        in: query
        name: pageIndex
        type: string
      - description: Page size of projects
        in: query
        name: pageSize
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProjectsPaged'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Get projects
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: Create project
      parameters:
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.InsertProject'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Project'
        "422":
          description: Bind error
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Create project
      tags:
      - Project
  /projects/{project_id}:
    delete:
      consumes:
      - application/json
      description: Delete project
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Delete project
      tags:
      - Project
    get:
      consumes:
      - application/json
      description: Get project by ID
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Get project by ID
      tags:
      - Project
    put:
      consumes:
      - application/json
      description: Update project
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.InsertProject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project/Bind error
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Update project
      tags:
      - Project
  /projects/{project_id}/archive:
    put:
      description: Archive the project by id
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Archive the project by id
      tags:
      - Project
  /projects/{project_id}/members:
    get:
      consumes:
      - application/json
      description: Get project members
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Get project members
      tags:
      - Project
  /projects/{project_id}/members/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete project member
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      - description: User id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Project not found/User not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project/Incorrect id of user
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Delete project member
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: Add project member
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      - description: User id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Project not found/User not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project/Incorrect id of user
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Add project member
      tags:
      - Project
  /projects/{project_id}/tasks:
    get:
      description: Get project tasks
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tasks'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Get project tasks
      tags:
      - Project
  /projects/{project_id}/unarchive:
    put:
      description: Unarchive the project by id
      parameters:
      - description: Project id
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/model.Message'
        "422":
          description: Incorrect id of project
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Unarchive the project by id
      tags:
      - Project
  /projects/archived:
    get:
      description: Get archived projects
      parameters:
      - description: Page index of projects
        in: query
        name: pageIndex
        type: string
      - description: Page size of projects
        in: query
        name: pageSize
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProjectsPaged'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Get archived projects
      tags:
      - Project
  /refresh:
    post:
      consumes:
      - application/json
      description: Refresh
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
      summary: Refresh
      tags:
      - Auth
  /task:
    post:
      consumes:
      - application/json
      description: Create task
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Task'
      summary: Create task
      tags:
      - Task
  /task/{id}:
    delete:
      consumes:
      - application/json
      description: Delete task
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete task
      tags:
      - Task
    get:
      consumes:
      - application/json
      description: Get task by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      summary: Get task by ID
      tags:
      - Task
    put:
      consumes:
      - application/json
      description: Update task
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      summary: Update task
      tags:
      - Task
  /users:
    get:
      consumes:
      - application/json
      description: Get users
      parameters:
      - description: Page index
        in: query
        name: pageIndex
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UsersPaged'
      summary: Get users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInserted'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
      summary: Create user
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Get user by ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInserted'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
      summary: Update user
      tags:
      - User
  /users/{id}/projects:
    get:
      consumes:
      - application/json
      description: Get user projects
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/model.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Message'
      summary: Get user projects
      tags:
      - User
swagger: "2.0"
